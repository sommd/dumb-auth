name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+" # MAJOR.MINOR.PATCH
      - "[0-9]+.[0-9]+.[0-9]+-[A-Za-z]+" # MAJOR.MINOR.PATCH-pre
      - "[0-9]+.[0-9]+.[0-9]+-[A-Za-z]+.[0-9]+" # MAJOR.MINOR.PATCH-pre.num

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set version
        run: sed -i 's/^version = "[^"]*"/version = "${{ github.ref_name }}"/' Cargo.toml
      - name: Install target
        run: rustup target add '${{ matrix.target }}'
      - name: Build
        run: cargo build --target '${{ matrix.target }}' --release
      - name: Test
        run: cargo test --target '${{ matrix.target }}' --release
      - name: Rename binary
        run: mv 'target/${{ matrix.target }}/release/dumb-auth' 'dumb-auth-${{ github.ref_name }}-${{ matrix.target }}'
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: dumb-auth-${{ github.ref_name }}-${{ matrix.target }}
          path: dumb-auth-${{ github.ref_name }}-${{ matrix.target }}
          if-no-files-found: error

  release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Create Github release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create \
            --generate-notes \
            ${{ contains(github.ref_name, '-') && '--prerelease' || '' }} \
            --verify-tag \
            '${{ github.ref_name }}' \
            'dumb-auth-${{ github.ref_name }}-'*

  docker:
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - image: dumb-auth
          - image: dumb-auth-swag-mod
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          pattern: dumb-auth-*-linux-*
          merge-multiple: true
      - name: Rename binaries
        run: |
          mv 'dumb-auth-${{ github.ref_name }}-x86_64-unknown-linux-gnu' dumb-auth-amd64
          mv 'dumb-auth-${{ github.ref_name }}-x86_64-unknown-linux-musl' dumb-auth-amd64-musl
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:docker/${{ matrix.image }}"
          build-contexts: binaries=.
          platforms: linux/amd64
          push: true
          tags: |
            sommd/${{ matrix.image }}:${{ github.ref_name }}
            ${{ !contains(github.ref_name, '-') && format('sommd/{0}:latest', matrix.image) || '' }}
