# This file configures dumb-auth. Include it at the top-level of a `server`
# block to enable authentication:
#
#   server {
#       listen ...;
#       server_name ...;
#
#       include dumb-auth.conf;
#
#       ...
#   }
#
# All `location`s in the `server` block will require authentication by default.
# You can disable authentication on any `location`s that should be public:
#
#   location /public {
#       auth_request off;
#
#       ...
#   }

# Adjust these if necessary
set $dumb_auth_host 127.0.0.1;
set $dumb_auth_port 3862;

# Authenticate requests using /auth_request which proxies to dumb-auth
auth_request /auth;
# Extract Location header from response for @auth_denied_handler to use
auth_request_set $auth_redirect_uri $upstream_http_location;
# Use @auth_denied_handler to handle 401's from dumb-auth
error_page 401 = @auth_denied_handler;

location = /auth {
    internal;

    # auth_request doesn't forward the body, so don't proxy it
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";

    # Forward the request URI to dumb-auth
    proxy_set_header X-Original-URI $request_uri;

    proxy_pass http://$dumb_auth_host:$dumb_auth_port;
}

location @auth_denied_handler {
    internal;

    # Redirect to Location header from auth response if it was present
    if ($auth_redirect_uri) {
        return 303 $auth_redirect_uri;
    }

    # Otherwise we just return the auth response, which is already a 401
}

# dumb-auth public frontend routes
location /login {
    # Disabled auth
    auth_request off;

    proxy_pass http://$dumb_auth_host:$dumb_auth_port;
}
